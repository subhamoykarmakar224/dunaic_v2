[{"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\index.js":"1","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\App.js":"2","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Navbar.js":"3","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Home.js":"4","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Services.js":"5","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Admin.js":"6","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\ContactUs.js":"7","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Clients.js":"8","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Footer.js":"9","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\HomeCarousel.js":"10","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\CardService.js":"11","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\HomeCarouselItem.js":"12","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\DemoProjects.js":"13","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\util\\FirebaseConfig.js":"14","G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Feedback.js":"15"},{"size":409,"mtime":1611868803300,"results":"16","hashOfConfig":"17"},{"size":1029,"mtime":1611880125063,"results":"18","hashOfConfig":"17"},{"size":811,"mtime":1611866556431,"results":"19","hashOfConfig":"17"},{"size":1090,"mtime":1611882070454,"results":"20","hashOfConfig":"17"},{"size":6101,"mtime":1611866556431,"results":"21","hashOfConfig":"17"},{"size":1074,"mtime":1611866556429,"results":"22","hashOfConfig":"17"},{"size":7542,"mtime":1612287855172,"results":"23","hashOfConfig":"17"},{"size":874,"mtime":1611897152446,"results":"24","hashOfConfig":"17"},{"size":2509,"mtime":1611866556430,"results":"25","hashOfConfig":"17"},{"size":2557,"mtime":1612287550677,"results":"26","hashOfConfig":"17"},{"size":1240,"mtime":1611866556429,"results":"27","hashOfConfig":"17"},{"size":691,"mtime":1611866556431,"results":"28","hashOfConfig":"17"},{"size":1452,"mtime":1612287886629,"results":"29","hashOfConfig":"17"},{"size":580,"mtime":1611881817015,"results":"30","hashOfConfig":"17"},{"size":10015,"mtime":1611903506072,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1s28ii4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\index.js",[],["64","65"],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\App.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Navbar.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Home.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Services.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Admin.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\ContactUs.js",["66"],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Clients.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Footer.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\HomeCarousel.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\CardService.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\HomeCarouselItem.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\DemoProjects.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\util\\FirebaseConfig.js",[],"G:\\Projects\\DUNAIC_v2\\dunaic_v2\\dunaicv2\\src\\components\\Feedback.js",["67"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Modal, Form } from \"react-bootstrap\";\r\nimport Slider from \"react-slick\";\r\nimport firebase from './util/FirebaseConfig';\r\nimport './css/Feedback.css'\r\nfunction Feedback() {\r\n  const [feedbacks, setFeedbacks] = useState([])\r\n  const [show, setShow] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  const [showErrorDialog, setShowErrorDialog] = useState(false);\r\n\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleDialogClose = () => setShowDialog(false);\r\n\r\n  const handleErrorClose = () => {\r\n    setShowErrorDialog(false);\r\n  }\r\n\r\n  // Feedback Form\r\n  const [otp, setOTP] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [company, setCompany] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [rating, setRating] = useState('')\r\n  const [FEEDBACK, setFeedback] = useState('')\r\n\r\n  let settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 1000,\r\n    arrows: false,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 2,\r\n    responsive: [\r\n      {\r\n        breakpoint: 960,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const RatingWords = {\r\n    \"5\": \"Very Satisfied\",\r\n    \"4\": \"Satisfied\",\r\n    \"3\": \"Neutral\",\r\n    \"2\": \"Dissatisfied\",\r\n    \"1\": \"Very Dissatisfied\",\r\n    \"0\": \"Not Rated\",\r\n  }\r\n\r\n  useEffect(() => {\r\n    firebase.firestore().collection('feedbacks').onSnapshot(\r\n      snapshots => {\r\n        const listFeedback = snapshots.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setFeedbacks(listFeedback);\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  const onFeedbackSubmit = e => {\r\n    e.preventDefault();\r\n    if (otp.length < 4) {\r\n      setErrorMsg('Invalid OTP.')\r\n      setShowErrorDialog(true)\r\n      return;\r\n    }\r\n    var i = '';\r\n    firebase.firestore().collection('FeedbackOTP')\r\n      .where(\"otp\", \"==\", otp)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          i = doc.id;\r\n          // console.log(doc.id, \" => \", doc.data());\r\n        });\r\n\r\n        if (!(querySnapshot.docs.length >= 1)) {\r\n          setErrorMsg('The OTP you have entered is invalid. To submit a feedback you need to get in touch with us and we will provide you with an OTP.')\r\n          setShowErrorDialog(true)\r\n          return;\r\n        }\r\n\r\n        if (name.length <= 0) {\r\n          setErrorMsg('Name cannot be left blank.')\r\n          setShowErrorDialog(true)\r\n          return;\r\n        }\r\n\r\n        if (email.length <= 0) {\r\n          setErrorMsg('Email cannot be left blank.')\r\n          setShowErrorDialog(true)\r\n          return;\r\n        }\r\n\r\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\r\n          setErrorMsg('The email you have entered is invalid. Please enter a valid email.')\r\n          setShowErrorDialog(true)\r\n          return;\r\n        }\r\n\r\n        if (company.length <= 0) {\r\n          setErrorMsg('Company name cannot be left blank.')\r\n          setShowErrorDialog(true)\r\n          return;\r\n        }\r\n\r\n        if (rating === '' || rating === '0') {\r\n          setErrorMsg('Rating can be only filled between 1-5. Please choose a valid rating.')\r\n          setShowErrorDialog(true)\r\n          return;\r\n        }\r\n\r\n        if (FEEDBACK.length < 20) {\r\n          setErrorMsg('Feedback needs to be atleast of length 20.')\r\n          setShowErrorDialog(true)\r\n          return;\r\n        }\r\n\r\n        firebase.firestore().collection('feedbacks')\r\n          .add({\r\n            name, email, company, phone, rating, FEEDBACK\r\n          })\r\n          .then(() => {\r\n            setShow(false);\r\n            setShowDialog(true);\r\n            firebase\r\n              .firestore()\r\n              .collection(\"FeedbackOTP\")\r\n              .doc(i)\r\n              .delete();\r\n            setName('');\r\n            setEmail('')\r\n            setCompany('')\r\n            setPhone('')\r\n            setRating('')\r\n            setFeedback('')\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 style={{ marginTop: \"20px\" }}>\r\n        CLIENTS FEEDBACK\r\n      </h4>\r\n\r\n      <Slider {...settings} className=\"slider-div\">\r\n\r\n        <div key={0} className=\"div-add-feedback\" onClick={handleShow}>\r\n          <Card bg='light' style={{ width: '18rem', height: '15rem' }}>\r\n            <Card.Body>\r\n              <Card.Text >\r\n                <img src=\"/assets/ico/add.svg\" width='40' atl=\"Add\" />\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n\r\n        {feedbacks.length <= 0 ?\r\n          // <i>Be the first one to give us a feedback.</i>\r\n          <span></span>\r\n          : feedbacks.map(feedback => (\r\n            <div key={feedback.id}>\r\n              <Card style={{ width: '18rem' }}>\r\n                <Card.Body>\r\n                  <Card.Title>{feedback.company}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">{feedback.name}, {RatingWords[feedback.rating]}</Card.Subtitle>\r\n                  <Card.Text>{feedback.FEEDBACK}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n      </Slider>\r\n\r\n      {/* Feedback Form */}\r\n      <Modal backdrop=\"static\" show={show} onHide={handleClose} style={{ padding: '10px' }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Submit Feedback</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n          <Form.Group controlId=\"formBasicOTP\">\r\n            <Form.Label>OTP</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"OTP\"\r\n              onChange={e => setOTP(e.currentTarget.value)}\r\n              value={otp}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicName\">\r\n            <Form.Label>Your Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Your Full Name\"\r\n              onChange={e => setName(e.currentTarget.value)}\r\n              value={name}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={e => setEmail(e.currentTarget.value)}\r\n              value={email}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n              </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicCompanyName\">\r\n            <Form.Label>Company Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Company Name (if Applicable)\"\r\n              onChange={e => setCompany(e.currentTarget.value)}\r\n              value={company}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicCompanyPhone\">\r\n            <Form.Label>Phone number</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"+91-0000000000\"\r\n              onChange={e => setPhone(e.currentTarget.value)}\r\n              value={phone}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicRating\">\r\n            <Form.Label>Please Rate Your Experience</Form.Label>\r\n            <Form.Control as=\"select\"\r\n              onChange={e => setRating(e.currentTarget.value)}\r\n              value={rating}>\r\n              <option>0</option>\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicMail\">\r\n            <Form.Label>Feedback</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              label=\"Mail body\" rows={5}\r\n              placeholder=\"Your feedback\"\r\n              onChange={e => setFeedback(e.currentTarget.value)}\r\n              value={FEEDBACK}\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-danger\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={onFeedbackSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Alert Dialog Box */}\r\n      <Modal\r\n        show={showDialog}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Saved</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Your feedback has been saved. Thank You so much.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleDialogClose}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showErrorDialog}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        bg='danger'\r\n        keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Error</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {errorMsg}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleErrorClose}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Feedback\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":174,"column":17,"nodeType":"78","endLine":174,"endColumn":71},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]